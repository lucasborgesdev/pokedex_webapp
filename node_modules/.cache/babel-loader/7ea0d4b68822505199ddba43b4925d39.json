{"ast":null,"code":"import _defineProperty from \"/home/luisa/pokedex_webapp/pokedex/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCHING_POKEMON, FETCHED_POKEMON, FETCH_POKEMON_ERROR, FETCHING_SINGLE_POKEMON, FETCHED_SINGLE_POKEMON, FETCH_SINGLE_POKEMON_ERROR } from '../actions/Pokemon';\nconst initialState = {\n  search: \"\",\n  all_pokemon: {},\n  search_pokemon: null,\n  error: null,\n  fetching: false\n};\nexport const pokemon = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCHING_POKEMON':\n      return _objectSpread({}, state, {\n        fetching: true\n      });\n\n    case 'FETCHED_POKEMON':\n      return _objectSpread({}, state, {\n        all_pokemon: [action.payload],\n        error: null,\n        fetching: false\n      });\n\n    case 'FETCH_POKEMON_ERROR':\n      return _objectSpread({}, state, {\n        error: action.payload,\n        fetching: false\n      });\n\n    case 'FETCHING_SINGLE_POKEMON':\n      return _objectSpread({}, state, {\n        fetching: true\n      });\n\n    case 'FETCHED_SINGLE_POKEMON':\n      return _objectSpread({}, state, {\n        search_pokemon: action.payload,\n        error: null,\n        fetching: false\n      });\n\n    case 'FETCH_SINGLE_POKEMON_ERROR':\n      return _objectSpread({}, state, {\n        error: action.payload,\n        fetching: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/luisa/pokedex_webapp/pokedex/src/reducers/Pokemon.js"],"names":["FETCHING_POKEMON","FETCHED_POKEMON","FETCH_POKEMON_ERROR","FETCHING_SINGLE_POKEMON","FETCHED_SINGLE_POKEMON","FETCH_SINGLE_POKEMON_ERROR","initialState","search","all_pokemon","search_pokemon","error","fetching","pokemon","state","action","type","payload"],"mappings":";;;;;;AAAA,SACIA,gBADJ,EAEIC,eAFJ,EAGIC,mBAHJ,EAIIC,uBAJJ,EAKIC,sBALJ,EAMIC,0BANJ,QAOO,oBAPP;AASA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAU,EADC;AAEjBC,EAAAA,WAAW,EAAK,EAFC;AAGjBC,EAAAA,cAAc,EAAE,IAHC;AAIjBC,EAAAA,KAAK,EAAW,IAJC;AAKjBC,EAAAA,QAAQ,EAAQ;AALC,CAArB;AAQA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AACI,+BAAYF,KAAZ;AAAmBF,QAAAA,QAAQ,EAAE;AAA7B;;AACJ,SAAK,iBAAL;AACI,+BAAYE,KAAZ;AAAmBL,QAAAA,WAAW,EAAE,CAACM,MAAM,CAACE,OAAR,CAAhC;AAAkDN,QAAAA,KAAK,EAAE,IAAzD;AAA+DC,QAAAA,QAAQ,EAAE;AAAzE;;AACJ,SAAK,qBAAL;AACI,+BAAYE,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAAjC;AAA0CL,QAAAA,QAAQ,EAAE;AAApD;;AACJ,SAAK,yBAAL;AACI,+BAAYE,KAAZ;AAAmBF,QAAAA,QAAQ,EAAE;AAA7B;;AACJ,SAAK,wBAAL;AACI,+BAAYE,KAAZ;AAAmBJ,QAAAA,cAAc,EAAEK,MAAM,CAACE,OAA1C;AAAmDN,QAAAA,KAAK,EAAE,IAA1D;AAAgEC,QAAAA,QAAQ,EAAE;AAA1E;;AACJ,SAAK,4BAAL;AACI,+BAAYE,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAAjC;AAA0CL,QAAAA,QAAQ,EAAE;AAApD;;AAEJ;AACI,aAAOE,KAAP;AAfR;AAiBH,CAlBM","sourcesContent":["import { \n    FETCHING_POKEMON,\n    FETCHED_POKEMON,\n    FETCH_POKEMON_ERROR,\n    FETCHING_SINGLE_POKEMON,\n    FETCHED_SINGLE_POKEMON,\n    FETCH_SINGLE_POKEMON_ERROR,\n} from '../actions/Pokemon';\n\nconst initialState = {\n    search:         \"\",\n    all_pokemon:    {},\n    search_pokemon: null,\n    error:          null,\n    fetching:       false,\n};\n\nexport const pokemon = (state = initialState, action) => {\n    switch (action.type) {\n        case 'FETCHING_POKEMON':\n            return { ...state, fetching: true }\n        case 'FETCHED_POKEMON':\n            return { ...state, all_pokemon: [action.payload], error: null, fetching: false }\n        case 'FETCH_POKEMON_ERROR':\n            return { ...state, error: action.payload, fetching: false }\n        case 'FETCHING_SINGLE_POKEMON':\n            return { ...state, fetching: true }\n        case 'FETCHED_SINGLE_POKEMON':\n            return { ...state, search_pokemon: action.payload, error: null, fetching: false }\n        case 'FETCH_SINGLE_POKEMON_ERROR':\n            return { ...state, error: action.payload, fetching: false }\n            \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}