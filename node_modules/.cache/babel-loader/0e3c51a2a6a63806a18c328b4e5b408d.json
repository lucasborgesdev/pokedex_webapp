{"ast":null,"code":"import _defineProperty from \"/home/luisa/pokedex_webapp/pokedex/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HANDLE_SEARCH, FETCHING_POKEMON, FETCHED_POKEMON, FETCH_POKEMON_ERROR } from '../actions/Pokemon';\nconst initialState = {\n  search: \"\",\n  all_pokemon: {},\n  pokemon: null,\n  error: null,\n  fetching: false\n};\nexport const pokemon = (state = initialState, action) => {\n  switch (action.type) {\n    case 'HANDLE_SEARCH':\n      return _objectSpread({}, state, {\n        search: action.payload,\n        pokemon: search && all_pokemon ? all_pokemon.filter(all_pokemon => all_pokemon.name.toLowerCase().indexOf(search.toLowerCase()) > -1) : pokemon\n      });\n\n    case 'FETCHING_POKEMON':\n      return _objectSpread({}, state, {\n        fetching: true\n      });\n\n    case 'FETCHED_POKEMON':\n      return _objectSpread({}, state, {\n        all_pokemon: [action.payload],\n        error: null,\n        fetching: false\n      });\n\n    case 'FETCH_POKEMON_ERROR':\n      return _objectSpread({}, state, {\n        error: action.payload,\n        fetching: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/luisa/pokedex_webapp/pokedex/src/reducers/Pokemon.js"],"names":["HANDLE_SEARCH","FETCHING_POKEMON","FETCHED_POKEMON","FETCH_POKEMON_ERROR","initialState","search","all_pokemon","pokemon","error","fetching","state","action","type","payload","filter","name","toLowerCase","indexOf"],"mappings":";;;;;;AAAA,SACIA,aADJ,EAEIC,gBAFJ,EAGIC,eAHJ,EAIIC,mBAJJ,QAKO,oBALP;AAOA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAS,EADE;AAEjBC,EAAAA,WAAW,EAAI,EAFE;AAGjBC,EAAAA,OAAO,EAAQ,IAHE;AAIjBC,EAAAA,KAAK,EAAU,IAJE;AAKjBC,EAAAA,QAAQ,EAAO;AALE,CAArB;AAQA,OAAO,MAAMF,OAAO,GAAG,CAACG,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,+BAAYF,KAAZ;AAAmBL,QAAAA,MAAM,EAAEM,MAAM,CAACE,OAAlC;AAA2CN,QAAAA,OAAO,EAAIF,MAAM,IAAIC,WAAX,GAA0BA,WAAW,CAACQ,MAAZ,CAAmBR,WAAW,IAAIA,WAAW,CAACS,IAAZ,CAAiBC,WAAjB,GAA+BC,OAA/B,CAAuCZ,MAAM,CAACW,WAAP,EAAvC,IAA8D,CAAC,CAAjG,CAA1B,GAAgIT;AAArL;;AACJ,SAAK,kBAAL;AACI,+BAAYG,KAAZ;AAAmBD,QAAAA,QAAQ,EAAE;AAA7B;;AACJ,SAAK,iBAAL;AACI,+BAAYC,KAAZ;AAAmBJ,QAAAA,WAAW,EAAE,CAACK,MAAM,CAACE,OAAR,CAAhC;AAAkDL,QAAAA,KAAK,EAAE,IAAzD;AAA+DC,QAAAA,QAAQ,EAAE;AAAzE;;AACJ,SAAK,qBAAL;AACI,+BAAYC,KAAZ;AAAmBF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAjC;AAA0CJ,QAAAA,QAAQ,EAAE;AAApD;;AACJ;AACI,aAAOC,KAAP;AAVR;AAYH,CAbM","sourcesContent":["import { \n    HANDLE_SEARCH,\n    FETCHING_POKEMON,\n    FETCHED_POKEMON,\n    FETCH_POKEMON_ERROR,\n} from '../actions/Pokemon';\n\nconst initialState = {\n    search:        \"\",\n    all_pokemon:   {},\n    pokemon:       null,\n    error:         null,\n    fetching:      false,\n};\n\nexport const pokemon = (state = initialState, action) => {\n    switch (action.type) {\n        case 'HANDLE_SEARCH':\n            return { ...state, search: action.payload, pokemon: ((search && all_pokemon) ? all_pokemon.filter(all_pokemon => all_pokemon.name.toLowerCase().indexOf(search.toLowerCase()) >-1,): pokemon) }\n        case 'FETCHING_POKEMON':\n            return { ...state, fetching: true }\n        case 'FETCHED_POKEMON':\n            return { ...state, all_pokemon: [action.payload], error: null, fetching: false }\n        case 'FETCH_POKEMON_ERROR':\n            return { ...state, error: action.payload, fetching: false }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}