{"ast":null,"code":"import _defineProperty from \"/home/luisa/pokedex_webapp/pokedex/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HANDLE_SEARCH, FETCHING_POKEMON, FETCHED_POKEMON, FETCH_POKEMON_ERROR } from '../actions/Pokemon';\nconst initialState = {\n  search: \"\",\n  all_pokemon: {},\n  search_pokemon: null,\n  error: null,\n  fetching: false\n};\nexport const pokemon = (state = initialState, action) => {\n  switch (action.type) {\n    case 'HANDLE_SEARCH':\n      return _objectSpread({}, state, {\n        search: action.payload,\n        search_pokemon: state.search && state.all_pokemon ? state.all_pokemon.filter(pokemon => pokemon.name.toLowerCase().indexOf(state.search.toLowerCase()) > -1) : search_pokemon\n      });\n\n    case 'FETCHING_POKEMON':\n      return _objectSpread({}, state, {\n        fetching: true\n      });\n\n    case 'FETCHED_POKEMON':\n      return _objectSpread({}, state, {\n        all_pokemon: [action.payload],\n        error: null,\n        fetching: false\n      });\n\n    case 'FETCH_POKEMON_ERROR':\n      return _objectSpread({}, state, {\n        error: action.payload,\n        fetching: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/luisa/pokedex_webapp/pokedex/src/reducers/Pokemon.js"],"names":["HANDLE_SEARCH","FETCHING_POKEMON","FETCHED_POKEMON","FETCH_POKEMON_ERROR","initialState","search","all_pokemon","search_pokemon","error","fetching","pokemon","state","action","type","payload","filter","name","toLowerCase","indexOf"],"mappings":";;;;;;AAAA,SACIA,aADJ,EAEIC,gBAFJ,EAGIC,eAHJ,EAIIC,mBAJJ,QAKO,oBALP;AAOA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAU,EADC;AAEjBC,EAAAA,WAAW,EAAK,EAFC;AAGjBC,EAAAA,cAAc,EAAE,IAHC;AAIjBC,EAAAA,KAAK,EAAW,IAJC;AAKjBC,EAAAA,QAAQ,EAAQ;AALC,CAArB;AAQA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,+BAAYF,KAAZ;AAAmBN,QAAAA,MAAM,EAAEO,MAAM,CAACE,OAAlC;AAA2CP,QAAAA,cAAc,EAAII,KAAK,CAACN,MAAN,IAAgBM,KAAK,CAACL,WAAvB,GACxDK,KAAK,CAACL,WAAN,CAAkBS,MAAlB,CAAyBL,OAAO,IAAIA,OAAO,CAACM,IAAR,CAAaC,WAAb,GAA2BC,OAA3B,CAAmCP,KAAK,CAACN,MAAN,CAAaY,WAAb,EAAnC,IAAgE,CAAC,CAArG,CADwD,GAEtDV;AAFN;;AAGJ,SAAK,kBAAL;AACI,+BAAYI,KAAZ;AAAmBF,QAAAA,QAAQ,EAAE;AAA7B;;AACJ,SAAK,iBAAL;AACI,+BAAYE,KAAZ;AAAmBL,QAAAA,WAAW,EAAE,CAACM,MAAM,CAACE,OAAR,CAAhC;AAAkDN,QAAAA,KAAK,EAAE,IAAzD;AAA+DC,QAAAA,QAAQ,EAAE;AAAzE;;AACJ,SAAK,qBAAL;AACI,+BAAYE,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAAjC;AAA0CL,QAAAA,QAAQ,EAAE;AAApD;;AACJ;AACI,aAAOE,KAAP;AAZR;AAcH,CAfM","sourcesContent":["import { \n    HANDLE_SEARCH,\n    FETCHING_POKEMON,\n    FETCHED_POKEMON,\n    FETCH_POKEMON_ERROR,\n} from '../actions/Pokemon';\n\nconst initialState = {\n    search:         \"\",\n    all_pokemon:    {},\n    search_pokemon: null,\n    error:          null,\n    fetching:       false,\n};\n\nexport const pokemon = (state = initialState, action) => {\n    switch (action.type) {\n        case 'HANDLE_SEARCH':\n            return { ...state, search: action.payload, search_pokemon: ((state.search && state.all_pokemon) ? \n                state.all_pokemon.filter(pokemon => pokemon.name.toLowerCase().indexOf(state.search.toLowerCase()) >-1,)\n                : search_pokemon) }\n        case 'FETCHING_POKEMON':\n            return { ...state, fetching: true }\n        case 'FETCHED_POKEMON':\n            return { ...state, all_pokemon: [action.payload], error: null, fetching: false }\n        case 'FETCH_POKEMON_ERROR':\n            return { ...state, error: action.payload, fetching: false }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}